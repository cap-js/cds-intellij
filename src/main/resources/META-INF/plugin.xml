<idea-plugin>
    <id>com.sap.cap.cds</id>
    <name>SAP CDS Language Support</name>
    <vendor url="https://sap.com/">SAP SE</vendor>
    <description><![CDATA[ Provides support for the <a href="https://cap.cloud.sap/docs/cds/">CDS language</a> in IntelliJ IDEs. Use these powerful features:
<ul>
    <li>Syntax highlighting</li>
    <li>Code completion</li>
    <li>Goto definition</li>
    <li>Find references</li>
    <li>Highlight usages in file</li>
    <li>Structure tool window (Outline)</li>
    <li>Navigate Symbol... (symbols in workspace)</li>
    <li>Hover documentation</li>
    <li>Document formatting</li>
    <li>Diagnostics</li>
    <li>Quick fixes</li>
</ul>
The set of features will grow with future releases, aligned with the development of the JetBrains IntelliJ LSP API.]]></description>

    <depends>com.intellij.modules.platform</depends>
<!--    <depends>com.intellij.modules.ultimate</depends>-->
    <depends>org.jetbrains.plugins.textmate</depends>
    <depends optional="true" config-file="withNodeJs.xml">NodeJS</depends>


    <extensions defaultExtensionNs="com.intellij">
        <fileType
                name="cds"
                implementationClass="com.sap.cap.cds.intellij.CdsFileType"
                fieldName="INSTANCE"
                language="cds"
                extensions="cds"/>

        <notificationGroup id="com.sap.cap.cds.intellij.notifications"
                           displayType="BALLOON"/>

        <lang.substitutor language="cds" order="first"
                          implementationClass="com.sap.cap.cds.intellij.lang.CdsLanguageSubstitutor"/>

        <langCodeStyleSettingsProvider
                implementation="com.sap.cap.cds.intellij.codestyle.CdsCodeStyleSettingsProvider"/>

        <formattingService implementation="com.sap.cap.cds.intellij.codestyle.CdsCodeStylePreviewFormattingService"/>

        <intentionAction>
            <className>com.sap.cap.cds.intellij.httpFiles.HttpFileCompatConversionIntention</className>
        </intentionAction>

<!--        <notificationGroup id="com.sap.cap.cds.intellij.notifications"-->
<!--                           displayType="BALLOON"/>-->

        <vfs.asyncListener implementation="com.sap.cap.cds.intellij.codestyle.CdsPrettierJsonListener"/>
        <vfs.asyncListener implementation="com.sap.cap.cds.intellij.usersettings.CdsUserSettingsListener"/>
        <postStartupActivity implementation="com.sap.cap.cds.intellij.lifecycle.ProjectLifecycleListener"/>

        <applicationService
                serviceImplementation="com.sap.cap.cds.intellij.settings.AppSettings"/>
        <projectService
                serviceImplementation="com.sap.cap.cds.intellij.usersettings.CdsUserSettings"/>
        <projectService
                serviceImplementation="com.sap.cap.cds.intellij.usersettings.CdsUserSettingsService"/>
        <applicationConfigurable
                parentId="language"
                instance="com.sap.cap.cds.intellij.settings.AppSettingsConfigurable"
                id="com.sap.cap.cds.intellij.settings.AppSettingsConfigurable"
                displayName="CDS"/>

    </extensions>

    <depends>com.redhat.devtools.lsp4ij</depends>

    <extensions defaultExtensionNs="com.redhat.devtools.lsp4ij">
        <server id="cds"
                name="CDS Language Server"
                factoryClass="com.sap.cap.cds.intellij.lsp4ij.CdsLanguageServerFactory">
            <description><![CDATA[
        <h2>SAP CDS Language Support</h2>
        ]]>
            </description>

        </server>

        <fileNamePatternMapping patterns="*.cds;*.json"
                                serverId="cds"
                                languageId="cds"/>

        <languageMapping language="cds"
                         serverId="cds"
                         languageId="cds"/>



<!-- TODO? e.g. csn or json       <languageMapping language="XML"-->
<!--                         serverId="myLanguageServerId"-->
<!--                         documentMatcher="my.language.server.MyDocumentMatcher"/>-->
    </extensions>

    <applicationListeners>
        <listener
                topic="com.intellij.ide.AppLifecycleListener"
                class="com.sap.cap.cds.intellij.lifecycle.IdeLifecycleListener"
                activeInHeadlessMode="true" activeInTestMode="true"
        />
        <listener
                topic="com.intellij.ide.plugins.DynamicPluginListener"
                class="com.sap.cap.cds.intellij.lifecycle.PluginLifecycleListener"
                activeInHeadlessMode="true" activeInTestMode="true"
        />
    </applicationListeners>


    <actions>
        <!-- groups -->
        
        <group id="com.sap.cap.cds.intellij.group.cds"
               text="CDS"
               popup="true"
               icon="com.sap.cap.cds.intellij.CdsIcons.SERVER">
        </group>
        <group id="com.sap.cap.cds.intellij.group.cds.logs.lspServer"
               text="LSP Server Logs"
               popup="true">
            <add-to-group group-id="com.sap.cap.cds.intellij.group.cds"
                          anchor="first"/>
        </group>
        <group id="com.sap.cap.cds.intellij.group.cds.logs.stdio"
               text="LSP Stdio Logs"
               popup="true">
            <add-to-group group-id="com.sap.cap.cds.intellij.group.cds"
                          anchor="last"/>
        </group>

        <!-- actions -->
        
        <action id="cds.analyzeDependencies"
                class="com.sap.cap.cds.intellij.command.AnalyzeDependenciesAction"/>

        <action id="com.sap.cap.cds.intellij.showLspServerLogs"
                class="com.sap.cap.cds.intellij.lspServer.ShowLspServerLogsAction"
                text="Show Log File"
                description="Finds and opens the most recent CDS LSP server log file.">
            <add-to-group group-id="com.sap.cap.cds.intellij.group.cds.logs.lspServer"
                          anchor="first"/>
        </action>

        <action id="com.sap.cap.cds.intellij.copyLspServerLogsPath"
                class="com.sap.cap.cds.intellij.lspServer.CopyLspServerLogPathAction"
                text="Copy Log File Path"
                description="Copies the path of the most recent CDS LSP server log file to the clipboard.">
            <add-to-group group-id="com.sap.cap.cds.intellij.group.cds.logs.lspServer"
                          anchor="last"/>
        </action>

        <action id="com.sap.cap.cds.intellij.showStdioLogs"
                class="com.sap.cap.cds.intellij.lsp.ShowStdioLogsAction"
                text="Show Log File"
                description="Finds and opens the stdio log file.">
            <add-to-group group-id="com.sap.cap.cds.intellij.group.cds.logs.stdio"
                          anchor="first"/>
        </action>

        <action id="com.sap.cap.cds.intellij.copyStdioLogsPath"
                class="com.sap.cap.cds.intellij.lsp.CopyStdioLogPathAction"
                text="Copy Log File Path"
                description="Copies the path of the stdio log file to the clipboard.">
            <add-to-group group-id="com.sap.cap.cds.intellij.group.cds.logs.stdio"
                          anchor="last"/>
        </action>
    </actions>



    <change-notes><![CDATA[
<h2>Changes since version 1.6.0</h2>
<h3>Added</h3>
<ul>
    <li>Support for <i>Community Editions</i> of IntelliJ IDEs
        <br/>(The plugin is now based on the <i>LSP4IJ</i> plugin, which therefore gets installed in addition.)
    <li>IDE features unlocked via LSP4IJ 0.14.2:
    <ul>
        <li>Highlight Usages in File (highlights symbol usages)
        <li>Structure Tool Window (populates and updates the file structure panel)
        <li>Go to Symbol (find/list symbols in workspace)</li>
        <li>On-the-fly Code Formatting (format block when finishing it with <code>}</code> or <code>;</code>)
        <li>Format Selected Code
    </ul>
    <li>User settings:
        <ul>
            <li>Node.js interpreter path (to modify result of automatic search)
            <li>Additional environment variables for CDS Language Server
        </ul>
    </li>
    <li>Intention to convert HTTP files to IntelliJ-compatible format (useful for .http files created with <code>cds add http</code>)
    <li>Code-Style setting to put multiple parenthesized arguments or filters on a new line
    <li>Actions to open or copy the paths of the log files for LSP stdio and server tracing, respectively
</ul>
<h3>Changed</h3>
<ul>
    <li>Search suitable Node.js interpreter on first start of plugin
    <li>include @sap/cds-lsp 9.1.2 with the following changes since 9.1.0:
        <ul>
            <li>Formatting:
                <ul>
                    <li>Added options `whitespaceBeforeColonInParamList` and `whitespaceAfterColonInParamList` to control whitespace around colons in parameter lists
                    <li>fix: Colons in type paths are no longer aligned with other colons, nor are they padded with spaces
                </ul>
            </li>
            <li>Maximum log-file size can now be increased to at most 1 GB (default limit unchanged at 10 MB)
        </ul>
    </li>
    <li>Automatically fix invalid Node.js interpreter path in settings on plugin start or when opening settings
</ul>
<h3>Fixed</h3>
<ul>
    <li>Correctly validate Node.js interpreter path when opening settings
]]></change-notes>
</idea-plugin>
